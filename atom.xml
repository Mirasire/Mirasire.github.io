<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MirasireのBlog</title>
  
  <subtitle>Welcome back and goodbye.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mirasire.xyz/"/>
  <updated>2020-11-24T06:09:12.065Z</updated>
  <id>http://mirasire.xyz/</id>
  
  <author>
    <name>Mirasire</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>scheme-notes</title>
    <link href="http://mirasire.xyz/2020/11/24/scheme-note/"/>
    <id>http://mirasire.xyz/2020/11/24/scheme-note/</id>
    <published>2020-11-24T03:08:58.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Notes" scheme="http://mirasire.xyz/categories/NOTES/"/>
    
      <category term="Lisp" scheme="http://mirasire.xyz/categories/NOTES/LISP/"/>
    
    
      <category term="lisp" scheme="http://mirasire.xyz/tags/LISP/"/>
    
      <category term="Notes" scheme="http://mirasire.xyz/tags/NOTES/"/>
    
  </entry>
  
  <entry>
    <title>cool_review</title>
    <link href="http://mirasire.xyz/2020/11/13/cool-review/"/>
    <id>http://mirasire.xyz/2020/11/13/cool-review/</id>
    <published>2020-11-13T14:09:19.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux笔记-如何使用GDB进行调试</title>
    <link href="http://mirasire.xyz/2020/11/11/gdb/"/>
    <id>http://mirasire.xyz/2020/11/11/gdb/</id>
    <published>2020-11-11T12:30:24.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="胡搞瞎搞💥" scheme="http://mirasire.xyz/categories/%E8%83%A1%E6%90%9E%E7%9E%8E%E6%90%9E%F0%9F%92%A5/"/>
    
    
      <category term="GDB" scheme="http://mirasire.xyz/tags/GDB/"/>
    
      <category term="Linux" scheme="http://mirasire.xyz/tags/LINUX/"/>
    
      <category term="软件" scheme="http://mirasire.xyz/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>GNU/Flex 入门手册</title>
    <link href="http://mirasire.xyz/2020/11/01/fireFLEX/"/>
    <id>http://mirasire.xyz/2020/11/01/fireFLEX/</id>
    <published>2020-11-01T10:32:53.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>GNU/flex Version: 2.5.35<br>前置条件: <strong>C语言基础</strong> | <strong>正则表达式知识</strong></p></blockquote><a id="more"></a><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;GNU/flex Version: 2.5.35&lt;br&gt;前置条件: &lt;strong&gt;C语言基础&lt;/strong&gt; | &lt;strong&gt;正则表达式知识&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="胡搞瞎搞💥" scheme="http://mirasire.xyz/categories/%E8%83%A1%E6%90%9E%E7%9E%8E%E6%90%9E%F0%9F%92%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>📑 - 数据库系统原理</title>
    <link href="http://mirasire.xyz/2020/06/03/tkkmssql/"/>
    <id>http://mirasire.xyz/2020/06/03/tkkmssql/</id>
    <published>2020-06-03T04:14:35.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>『 期末复习 』- 🔍 数据库系统原理</p><blockquote><p>厦门大学嘉庚学院(TKK)专业课 - 数据库系统原理</p></blockquote><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;『 期末复习 』- 🔍 数据库系统原理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;厦门大学嘉庚学院(TKK)专业课 - 数据库系统原理&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="胡搞瞎搞💥" scheme="http://mirasire.xyz/categories/%E8%83%A1%E6%90%9E%E7%9E%8E%E6%90%9E%F0%9F%92%A5/"/>
    
    
      <category term="TKK学习笔记" scheme="http://mirasire.xyz/tags/TKK%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>「Mirasire&#39;s Emacs Notes」- Ph1.1</title>
    <link href="http://mirasire.xyz/2020/05/22/emacs-00/"/>
    <id>http://mirasire.xyz/2020/05/22/emacs-00/</id>
    <published>2020-05-22T02:17:22.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Evil = 让他不那么令人讨厌</li><li>Melp = 让它变得<code>不可思议</code><br><del>Emacs + Elisp = Everything  You want!</del><br>TODO</li></ul><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Evil = 让他不那么令人讨厌&lt;/li&gt;
&lt;li&gt;Melp = 让它变得&lt;code&gt;不可思议&lt;/code&gt;&lt;br&gt;&lt;del&gt;Emacs + Elisp = Everything  You want!&lt;/del&gt;&lt;br&gt;TODO&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Emacs" scheme="http://mirasire.xyz/categories/EMACS/"/>
    
    
      <category term="Emacs" scheme="http://mirasire.xyz/tags/EMACS/"/>
    
      <category term="学习历程" scheme="http://mirasire.xyz/tags/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces-Round#613 题解报告</title>
    <link href="http://mirasire.xyz/2020/05/18/CodeForceR613/"/>
    <id>http://mirasire.xyz/2020/05/18/CodeForceR613/</id>
    <published>2020-05-18T15:37:16.000Z</published>
    <updated>2020-11-24T06:09:12.061Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><blockquote><p>CodeForces-Round#613 | <a href="http://codeforces.com/contest/1285" target="_blank" rel="noopener"><strong>Here</strong></a><br>题解代码 | <a href="http://github.com/Mirasire/icpc-train" target="_blank" rel="noopener"><strong>Here</strong></a></p></blockquote><a id="more"></a><h1 id="A-Mezo-Playing-Zoma"><a href="#A-Mezo-Playing-Zoma" class="headerlink" title="A. Mezo Playing Zoma"></a>A. Mezo Playing Zoma</h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>发送一串含L、R字符的字符串，<code>L=1</code>，<code>R=-1</code>，在发送的时候可能会丢失一部分。</p><p>问：对方接到数值数据(即将字符串的值都加起来)最多又集中不同的数值？</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>显然这个问题的答案是能接收到的数值的$\text{Max - Min + 1}$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> l,r,n;</span><br><span class="line">    l=r=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c: str) &#123;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'R'</span>) r++;</span><br><span class="line">        <span class="keyword">else</span> l--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">abs</span>(r-l+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Just-Eat-It"><a href="#B-Just-Eat-It" class="headerlink" title="B. Just Eat It!"></a>B. Just Eat It!</h1><h2 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h2><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line">ll arr[maxn];</span><br><span class="line">    </span><br><span class="line"><span class="function">ll <span class="title">getAdeMax</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    ll maxAde=<span class="number">0</span>,tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l; i&lt;r; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp+arr[i]&lt;<span class="number">0</span>) tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp+=arr[i];</span><br><span class="line">            maxAde=max(tmp,maxAde);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxAde;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    ll yas,ade,mmade;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        yas=ade=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; arr[i];</span><br><span class="line">            yas+=arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        ade=max(getAdeMax(<span class="number">1</span>,n),getAdeMax(<span class="number">0</span>,n<span class="number">-1</span>));</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (ade&gt;=yas? <span class="string">"NO"</span> : <span class="string">"YES"</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C"><a href="#C" class="headerlink" title="C."></a>C.</h1><h2 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h2><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    * Date: 2020-05-07</span></span><br><span class="line"><span class="comment">    * Sign: Mirasire -&gt; archlinux</span></span><br><span class="line"><span class="comment">    * github repo. -&gt; Mirasire/icpc-train </span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line">    </span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b? gcd(b,a%b) : a ; &#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    ll x,a,b,mid,n;</span><br><span class="line">    ll ta,tb;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    a=<span class="number">1</span>; b=mid=x;</span><br><span class="line">    n=<span class="built_in">sqrt</span>(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        ta=i,tb=x/i;</span><br><span class="line">        <span class="keyword">if</span>(!(x%ta) &amp;&amp; gcd(ta,tb)==<span class="number">1</span> &amp;&amp; tb &lt; mid) &#123;</span><br><span class="line">            a=ta;</span><br><span class="line">            b=tb;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" "</span>  &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D"><a href="#D" class="headerlink" title="D."></a>D.</h1><h2 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h2><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    * Date: 2020-05-07</span></span><br><span class="line"><span class="comment">    * Sign: Mirasire -&gt; archlinux</span></span><br><span class="line"><span class="comment">    * github repo. -&gt; Mirasire/icpc-train </span></span><br><span class="line"><span class="comment">    * steal form bilibili</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _pb push_back</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">slove</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p.size()==<span class="number">0</span> || k&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p1,p0;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i: p) &#123;</span><br><span class="line">        <span class="keyword">if</span>((i&gt;&gt;k)&amp;<span class="number">1</span>) p1._pb(i-(<span class="number">1</span>&lt;&lt;k));</span><br><span class="line">        <span class="keyword">else</span> p0._pb(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p0.size() == <span class="number">0</span>) <span class="keyword">return</span> slove(p1,k<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(p1.size() == <span class="number">0</span>) <span class="keyword">return</span> slove(p0,k<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (<span class="number">1</span>&lt;&lt;k)+min(slove(p1,k<span class="number">-1</span>),slove(p0,k<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getBits</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k) &#123;</span><br><span class="line">        k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> k,Smax=<span class="number">0</span>,tmp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; tmp;</span><br><span class="line">        a._pb(tmp);</span><br><span class="line">        Smax=max(Smax,getBits(tmp));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; slove(a,Smax<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E"><a href="#E" class="headerlink" title="E."></a>E.</h1><h2 id="题意-4"><a href="#题意-4" class="headerlink" title="题意"></a>题意</h2><h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><h1 id="F"><a href="#F" class="headerlink" title="F."></a>F.</h1><h2 id="题意-5"><a href="#题意-5" class="headerlink" title="题意"></a>题意</h2><h2 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CodeForces-Round#613 | &lt;a href=&quot;http://codeforces.com/contest/1285&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;题解代码 | &lt;a href=&quot;http://github.com/Mirasire/icpc-train&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="CodeForces" scheme="http://mirasire.xyz/tags/CODEFORCES/"/>
    
      <category term="Div.2" scheme="http://mirasire.xyz/tags/DIV-2/"/>
    
  </entry>
  
  <entry>
    <title>orgbsic</title>
    <link href="http://mirasire.xyz/2020/05/15/orgBsc/"/>
    <id>http://mirasire.xyz/2020/05/15/orgBsc/</id>
    <published>2020-05-15T08:21:07.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TODO&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>orggtd</title>
    <link href="http://mirasire.xyz/2020/05/15/orgGtd/"/>
    <id>http://mirasire.xyz/2020/05/15/orgGtd/</id>
    <published>2020-05-15T08:21:00.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TODO&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>gtd1</title>
    <link href="http://mirasire.xyz/2020/05/15/Gtd/"/>
    <id>http://mirasire.xyz/2020/05/15/Gtd/</id>
    <published>2020-05-15T08:20:34.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TODO&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据结构学习 - 并查集及其拓展</title>
    <link href="http://mirasire.xyz/2020/05/01/dsu-ds/"/>
    <id>http://mirasire.xyz/2020/05/01/dsu-ds/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><p><del>dsu学习笔记指北</del></p><p><strong>并查集(dsu)学习笔记指南</strong></p><a id="more"></a><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><h3 id="结构目的"><a href="#结构目的" class="headerlink" title="结构目的"></a>结构目的</h3><p>快速合并多个集合并查询元素是否处于同一集合中的数据结构。</p><blockquote><p>下述是普通集合和并查集合并的区别。</p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center"><img src="/img/dsu1.jpg" alt="normal set unite"></th><th style="text-align:center"><img src="/img/dsu2.jpg" alt="union set unite"></th></tr></thead><tbody><tr><td style="text-align:center">普通集合</td><td style="text-align:center">并查集</td></tr></tbody></table></div><h3 id="模板代码"><a href="#模板代码" class="headerlink" title="模板代码"></a>模板代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> dsu[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=u,tp;</span><br><span class="line">    <span class="keyword">while</span>(dsu[u]!=u) u=dsu[u];</span><br><span class="line">    <span class="keyword">while</span>(dsu[a]!=u) &#123;</span><br><span class="line">        tp=dsu[a];</span><br><span class="line">        dsu[a]=u;</span><br><span class="line">        a=tp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fa=find(a),fb=find(b);</span><br><span class="line">    <span class="keyword">if</span>(fa!=fb) dsu[fa]=fb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="带权并查询集"><a href="#带权并查询集" class="headerlink" title="带权并查询集"></a>带权并查询集</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">100</span>,MOD=<span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> dsu[maxn],val[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dsu[u]!=u) &#123;</span><br><span class="line">        <span class="keyword">int</span> t=dsu[u];</span><br><span class="line">        dsu[u]=find(dsu[u]);</span><br><span class="line">        val[u]=(val[t]+val[u])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dsu[u];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩展域并查询集"><a href="#扩展域并查询集" class="headerlink" title="扩展域并查询集"></a>扩展域并查询集</h3><h2 id="例题-食物链"><a href="#例题-食物链" class="headerlink" title="例题-食物链"></a>例题-食物链</h2><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法-1"></a>解法-1</h3><p><strong><em>带权并查询集</em></strong></p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法-2"></a>解法-2</h3><p><strong><em>扩展域并查询集</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
&lt;p&gt;&lt;del&gt;dsu学习笔记指北&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并查集(dsu)学习笔记指南&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="并查集" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="Algorithm" scheme="http://mirasire.xyz/tags/ALGORITHM/"/>
    
      <category term="数据结构" scheme="http://mirasire.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="并查集" scheme="http://mirasire.xyz/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="dsu" scheme="http://mirasire.xyz/tags/DSU/"/>
    
  </entry>
  
  <entry>
    <title>📑 - 计算机科学图形学</title>
    <link href="http://mirasire.xyz/2020/04/21/tkkcgra/"/>
    <id>http://mirasire.xyz/2020/04/21/tkkcgra/</id>
    <published>2020-04-21T13:06:52.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>与其说更像笔记，不如说是上课一些零碎东西的速记和堆叠。</p><blockquote><p>厦门大学嘉庚学院(TKK)选修课 - 计算机图形学</p></blockquote><p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;与其说更像笔记，不如说是上课一些零碎东西的速记和堆叠。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;厦门大学嘉庚学院(TKK)选修课 - 计算机图形学&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="胡搞瞎搞💥" scheme="http://mirasire.xyz/categories/%E8%83%A1%E6%90%9E%E7%9E%8E%E6%90%9E%F0%9F%92%A5/"/>
    
    
      <category term="TKK学习笔记" scheme="http://mirasire.xyz/tags/TKK%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>💤 · 关于失眠的困扰和我的解决 · 💤</title>
    <link href="http://mirasire.xyz/2020/04/17/BBCSleep10/"/>
    <id>http://mirasire.xyz/2020/04/17/BBCSleep10/</id>
    <published>2020-04-17T06:28:16.000Z</published>
    <updated>2020-11-24T06:09:12.061Z</updated>
    
    <content type="html"><![CDATA[<p>🛌谁不想有个美美的睡眠呢？<br><del>都是因为失去了珍贵的睡眠啊QWQ</del></p><a id="more"></a><h1 id="为啥-¿"><a href="#为啥-¿" class="headerlink" title="为啥 ¿"></a>为啥 ¿</h1><p><del>这个显然是因为再也无法忍受到早上疯狂赖床，和醒来很难受后…</del><br>哈？当人是累死个人啦QWQ，真的那种无敌无敌累，醒来也不舒服，而且上课的时候还无法集中注意力，懒懒散散的。</p><h1 id="过程-◰"><a href="#过程-◰" class="headerlink" title="过程 ◰"></a>过程 ◰</h1><blockquote><p>4-21-2020 ~ 5-11-2020</p></blockquote><h2 id="BBC睡眠十率"><a href="#BBC睡眠十率" class="headerlink" title="BBC睡眠十率"></a>BBC睡眠十率</h2><h3 id="视频总结"><a href="#视频总结" class="headerlink" title="视频总结"></a>视频总结</h3><blockquote><p>按照视频方法出现时间排序</p></blockquote><ol><li>睡觉前一小时洗个澡，出来后，当体温下降到最低的时候，就是最容易入睡的时候。<ul><li>标签：低温 ⇨ 困倦</li></ul></li><li>固定只能在卧室待上6个小时，其余时间都不能在卧室。<ul><li>标签：限时 ⇨ 卧室</li></ul></li><li>脚步用力，放松，循环几次。<ul><li>标签：脚步 ⇨ 抓放</li></ul></li></ol><h3 id="个人实验"><a href="#个人实验" class="headerlink" title="个人实验"></a>个人实验</h3><h2 id="冥想"><a href="#冥想" class="headerlink" title="冥想"></a>冥想</h2><h3 id="冥想方法"><a href="#冥想方法" class="headerlink" title="冥想方法"></a>冥想方法</h3><h3 id="个人实验-1"><a href="#个人实验-1" class="headerlink" title="个人实验"></a>个人实验</h3><h1 id="总结-◲"><a href="#总结-◲" class="headerlink" title="总结 ◲"></a>总结 ◲</h1><p><br/></p><blockquote><p>4-21-2020<br>真的会很难受，特别是醒来时候，而且睡的也不舒服。</p></blockquote><ul><li>永远，永远，永远不要拆分一个睡眠。</li><li>永远不要将躺在床上休息，然后莫名奇妙的睡着。</li></ul><blockquote><p>4-22-2020<br>尝试了5小时睡眠。</p></blockquote><ul><li>5小时睡眠，在早上起床的时候，会很累，没有神清气爽的感觉。</li><li>在醒来之后再依靠着困意入眠，再次醒来的感觉更加让人难受。</li></ul><blockquote><p>4-24-2020<br>尝试7~8小时睡眠法。</p></blockquote><h1 id="视频资料"><a href="#视频资料" class="headerlink" title="视频资料"></a>视频资料</h1><p><a href="https://www.bilibili.com/video/BV1qs411h7RQ" target="_blank" rel="noopener"><strong>Bilibili-睡眠十律</strong></a><br><a href="https://www.bilibili.com/video/BV1R7411E7KS" target="_blank" rel="noopener"><strong>Bilibili-什么是冥想?</strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🛌谁不想有个美美的睡眠呢？&lt;br&gt;&lt;del&gt;都是因为失去了珍贵的睡眠啊QWQ&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="胡搞瞎搞💥" scheme="http://mirasire.xyz/categories/%E8%83%A1%E6%90%9E%E7%9E%8E%E6%90%9E%F0%9F%92%A5/"/>
    
    
      <category term="生活" scheme="http://mirasire.xyz/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="杂感" scheme="http://mirasire.xyz/tags/%E6%9D%82%E6%84%9F/"/>
    
      <category term="睡觉" scheme="http://mirasire.xyz/tags/%E7%9D%A1%E8%A7%89/"/>
    
      <category term="失眠" scheme="http://mirasire.xyz/tags/%E5%A4%B1%E7%9C%A0/"/>
    
  </entry>
  
  <entry>
    <title>多项式笔记-快速快速数论变换</title>
    <link href="http://mirasire.xyz/2020/04/13/NTT/"/>
    <id>http://mirasire.xyz/2020/04/13/NTT/</id>
    <published>2020-04-13T03:47:49.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="多项式" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="Algorithm" scheme="http://mirasire.xyz/tags/ALGORITHM/"/>
    
      <category term="NTT" scheme="http://mirasire.xyz/tags/NTT/"/>
    
  </entry>
  
  <entry>
    <title>多项式笔记-快速傅里叶变换</title>
    <link href="http://mirasire.xyz/2020/04/13/FFT/"/>
    <id>http://mirasire.xyz/2020/04/13/FFT/</id>
    <published>2020-04-12T17:30:04.000Z</published>
    <updated>2020-11-24T06:09:12.061Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="多项式" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="Algorithm" scheme="http://mirasire.xyz/tags/ALGORITHM/"/>
    
      <category term="FFT" scheme="http://mirasire.xyz/tags/FFT/"/>
    
  </entry>
  
  <entry>
    <title>其他树学习笔记-线段树</title>
    <link href="http://mirasire.xyz/2020/04/12/SegmentTree/"/>
    <id>http://mirasire.xyz/2020/04/12/SegmentTree/</id>
    <published>2020-04-12T11:06:18.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="树" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/"/>
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="数据结构" scheme="http://mirasire.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="线段树" scheme="http://mirasire.xyz/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>『LeetCode』--&amp;nbsp 每日一题</title>
    <link href="http://mirasire.xyz/2020/04/10/LctOne/"/>
    <id>http://mirasire.xyz/2020/04/10/LctOne/</id>
    <published>2020-04-10T09:39:51.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>XXX <strong>- · - 连载中 - · -</strong> XXX</p><p><strong>Mirasire的LeetCode每日一题</strong></p><blockquote><p>日积月累 • 💧水滴石穿。</p></blockquote><a id="more"></a><hr><h1 id="『Lct151』Reverse-Words-in-a-String"><a href="#『Lct151』Reverse-Words-in-a-String" class="headerlink" title="『Lct151』Reverse Words in a String"></a>『Lct151』Reverse Words in a String</h1><blockquote><p>2020-4-10<br>链接地址 | <a href="https://leetcode-cn.com/problems/reverse-words-in-a-string/" target="_blank" rel="noopener"><strong>Lct151</strong></a></p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time:  xxxms</span></span><br><span class="line"><span class="comment">/*...code...*/</span></span><br></pre></td></tr></table></figure><hr><h1 id="『Lct887』Super-Egg-Drop"><a href="#『Lct887』Super-Egg-Drop" class="headerlink" title="『Lct887』Super Egg Drop"></a>『Lct887』Super Egg Drop</h1><blockquote><p>2020-4-11<br>链接地址 | <a href="https://leetcode-cn.com/problems/super-egg-drop/" target="_blank" rel="noopener"><strong>Lct887</strong></a></p></blockquote><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><h3 id="实现代码-1"><a href="#实现代码-1" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time:  xxxms</span></span><br><span class="line"><span class="comment">/*...code...*/</span></span><br></pre></td></tr></table></figure><hr><h1 id="『Lct16-03』Intersection-LCCI"><a href="#『Lct16-03』Intersection-LCCI" class="headerlink" title="『Lct16.03』Intersection LCCI"></a>『Lct16.03』Intersection LCCI</h1><blockquote><p>2020-4-12<br>链接地址 | <a href="https://leetcode-cn.com/problems/intersection-lcci/" target="_blank" rel="noopener"><strong>Lct16.03</strong></a></p></blockquote><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><h3 id="实现代码-2"><a href="#实现代码-2" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time:  xxxms</span></span><br><span class="line"><span class="comment">/*...code...*/</span></span><br></pre></td></tr></table></figure><hr><h1 id="『Lct355』Design-Twitter"><a href="#『Lct355』Design-Twitter" class="headerlink" title="『Lct355』Design Twitter"></a>『Lct355』Design Twitter</h1><blockquote><p>2020-4-13<br>链接地址 | <a href="https://leetcode-cn.com/problems/design-twitter/" target="_blank" rel="noopener"><strong>Lct355</strong></a></p></blockquote><h2 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h2><h3 id="实现代码-3"><a href="#实现代码-3" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time:  xxxms</span></span><br><span class="line"><span class="comment">/*...code...*/</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XXX &lt;strong&gt;- · - 连载中 - · -&lt;/strong&gt; XXX&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mirasire的LeetCode每日一题&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日积月累 • 💧水滴石穿。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://mirasire.xyz/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="http://mirasire.xyz/categories/%E9%A2%98%E8%A7%A3/LEETCODE/"/>
    
    
      <category term="LeetCode" scheme="http://mirasire.xyz/tags/LEETCODE/"/>
    
      <category term="每日一题" scheme="http://mirasire.xyz/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>『LeetCode』--&amp;nbsp 数据库</title>
    <link href="http://mirasire.xyz/2020/04/10/LctSql/"/>
    <id>http://mirasire.xyz/2020/04/10/LctSql/</id>
    <published>2020-04-10T05:06:25.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>XXX <strong>- · - 连载中 - · -</strong> XXX</p><p><strong>LeetCode 数据库刷题笔记。</strong></p><blockquote><p>选择语言: <strong>T-SQL</strong><br>题目连接 | <a href="https://leetcode-cn.com/problemset/database/" target="_blank" rel="noopener"><strong>Here</strong></a></p></blockquote><a id="more"></a><hr><h1 id="『Lct182』Duplicate-Emails"><a href="#『Lct182』Duplicate-Emails" class="headerlink" title="『Lct182』Duplicate Emails"></a>『Lct182』Duplicate Emails</h1><p><strong>Label: <font color=green>&nbsp;&nbsp;Easy</font></strong></p><blockquote><p>链接地址 | <a href="https://leetcode-cn.com/problems/duplicate-emails/" target="_blank" rel="noopener"><strong>Lct182</strong></a></p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>分组，然后使用函数查找邮箱出现次数&gt;1次的即可。</p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--time: 1245ms | memory: 0B</span></span><br><span class="line"><span class="comment">/* Write your T-SQL query statement below */</span></span><br><span class="line"><span class="keyword">SELECT</span> Email <span class="keyword">FROM</span> Person</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Email</span><br><span class="line"><span class="keyword">HAVING</span>  <span class="keyword">COUNT</span>(Email)&gt;<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在T-SQL中，WHERE不能和count这类聚合函数一起使用，所以当是哟这类函数作为筛选条件的时候要使用<strong>HAVING</strong>语句。<br>然而关于<strong>HAVING语句通常和GROUP BY语句连用的原因</strong>。</p><p>这边引用<a href="https://docs.microsoft.com/zh-cn/sql/t-sql/queries/select-having-transact-sql?view=sql-server-ver15" target="_blank" rel="noopener"><strong>MS文档</strong></a>作为解释：</p><blockquote><p>指定组或聚合的搜索条件。 HAVING 只能与 SELECT 语句一起使用。 HAVING 通常与 GROUP BY 子句一起使用。 如果未使用 GROUP BY，则会有隐式的单一、聚合组。</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XXX &lt;strong&gt;- · - 连载中 - · -&lt;/strong&gt; XXX&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LeetCode 数据库刷题笔记。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;选择语言: &lt;strong&gt;T-SQL&lt;/strong&gt;&lt;br&gt;题目连接 | &lt;a href=&quot;https://leetcode-cn.com/problemset/database/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://mirasire.xyz/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="http://mirasire.xyz/categories/%E9%A2%98%E8%A7%A3/LEETCODE/"/>
    
    
      <category term="LeetCode" scheme="http://mirasire.xyz/tags/LEETCODE/"/>
    
      <category term="数据库" scheme="http://mirasire.xyz/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>字符串匹配-AC自动机</title>
    <link href="http://mirasire.xyz/2020/04/10/aca-ds/"/>
    <id>http://mirasire.xyz/2020/04/10/aca-ds/</id>
    <published>2020-04-09T16:10:19.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串匹配" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
    
    
      <category term="icpc" scheme="http://mirasire.xyz/tags/ICPC/"/>
    
      <category term="Algorithm" scheme="http://mirasire.xyz/tags/ALGORITHM/"/>
    
      <category term="字符串" scheme="http://mirasire.xyz/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="AC自动机" scheme="http://mirasire.xyz/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>随机化算法-拉斯维加斯(Las Vegas)算法</title>
    <link href="http://mirasire.xyz/2020/04/09/LASVEGAS/"/>
    <id>http://mirasire.xyz/2020/04/09/LASVEGAS/</id>
    <published>2020-04-09T08:23:28.000Z</published>
    <updated>2020-11-24T06:09:12.065Z</updated>
    
    <content type="html"><![CDATA[<p>TODO</p><a id="more"></a><h1 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h1><h1 id="N-Queens-Problem"><a href="#N-Queens-Problem" class="headerlink" title="N-Queens Problem"></a>N-Queens Problem</h1><blockquote><p>问题描述</p></blockquote><h2 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h2><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><h3 id="伪代码描述"><a href="#伪代码描述" class="headerlink" title="伪代码描述"></a>伪代码描述</h3><h3 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h3><h2 id="Las-Vegas方法"><a href="#Las-Vegas方法" class="headerlink" title="Las Vegas方法"></a>Las Vegas方法</h2><h3 id="解决思路-1"><a href="#解决思路-1" class="headerlink" title="解决思路"></a>解决思路</h3><h3 id="伪代码描述-1"><a href="#伪代码描述-1" class="headerlink" title="伪代码描述"></a>伪代码描述</h3><h3 id="时间复杂度分析-1"><a href="#时间复杂度分析-1" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h3><h2 id="回溯法-Las-Vegas算法"><a href="#回溯法-Las-Vegas算法" class="headerlink" title="回溯法+Las Vegas算法"></a>回溯法+Las Vegas算法</h2><h3 id="解决思路-2"><a href="#解决思路-2" class="headerlink" title="解决思路"></a>解决思路</h3><h3 id="伪代码描述-2"><a href="#伪代码描述-2" class="headerlink" title="伪代码描述"></a>伪代码描述</h3><h3 id="时间复杂度分析-2"><a href="#时间复杂度分析-2" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h3><h2 id="关于Las-Vegas算法的总结"><a href="#关于Las-Vegas算法的总结" class="headerlink" title="关于Las Vegas算法的总结"></a>关于Las Vegas算法的总结</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TODO&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法和数据结构" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
      <category term="随机化算法" scheme="http://mirasire.xyz/categories/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="随机化算法" scheme="http://mirasire.xyz/tags/%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    
      <category term="Las Vegas" scheme="http://mirasire.xyz/tags/LAS-VEGAS/"/>
    
  </entry>
  
</feed>
